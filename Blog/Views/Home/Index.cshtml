@model Blog.ViewModels.HomeViewModel
@inject IStringLocalizer<SharedResource> Localizer

@{
    ViewData["Title"] = Localizer["Home"];
    var isRtl = System.Threading.Thread.CurrentThread.CurrentUICulture.Name.StartsWith("ar");
}

@section Styles {
    <style>
        /* Hero Section */
        .hero {
            background: linear-gradient(135deg, #1a1a1a 0%, #363636 100%);
            color: white;
            padding: 100px 0;
            margin-bottom: 60px;
            position: relative;
            overflow: hidden;
        }

        .hero::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('/images/pattern.png');
            opacity: 0.1;
            pointer-events: none;
        }

        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 1.5rem;
        }

        .hero p {
            font-size: 1.2rem;
            opacity: 0.9;
            margin-bottom: 2rem;
        }

        /* Category Filter */
        .category-filter {
            margin-bottom: 30px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .category-filter select {
            width: 200px;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        /* Posts Grid */
        .posts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 30px;
            margin-bottom: 60px;
        }

        .post-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
            height: 100%;
            overflow: hidden;
        }

        .post-card:hover {
            transform: translateY(-5px);
        }

        .post-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px 10px 0 0;
        }

        .post-card .content {
            padding: 20px;
        }

        .post-card h3 {
            margin-bottom: 10px;
            font-size: 1.4rem;
            line-height: 1.4;
        }

        .post-card p {
            color: #666;
            margin-bottom: 15px;
            line-height: 1.6;
        }

        .post-meta {
            color: #999;
            font-size: 0.9rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        /* RTL Specific Styles */
        .rtl {
            direction: rtl;
            text-align: right;
        }

        .rtl .post-card .content {
            text-align: right;
        }

        .rtl .category-filter select {
            text-align: right;
        }
    </style>
}

<section class="hero @(isRtl ? "rtl" : "")">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8 mx-auto text-center">
                <h1>@Localizer["WelcomeToBlog"]</h1>
                <p>@Localizer["BlogDescription"]</p>
            </div>
        </div>
    </div>
</section>

<div class="container">
    <div class="category-filter @(isRtl ? "rtl" : "")">
        <form method="get" class="d-flex align-items-center justify-content-between">
            <div>
                <label for="categoryId" class="me-2">@Localizer["FilterByCategory"]:</label>
                <select name="categoryId" id="categoryId" class="form-select d-inline-block" onchange="this.form.submit()">
                    <option value="">@Localizer["AllCategories"]</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id" selected="@(category.Id == Model.SelectedCategoryId)">
                            @(isRtl ? category.NameAr : category.NameEn)
                        </option>
                    }
                </select>
            </div>
            @if (Model.SelectedCategoryId.HasValue)
            {
                <a asp-action="Index" class="btn btn-outline-secondary">@Localizer["ClearFilter"]</a>
            }
        </form>
    </div>

    <div class="posts-grid">
        @if (!Model.Posts.Any())
        {
            <div class="col-12 text-center">
                <p>@Localizer["NoPostsFound"]</p>
            </div>
        }
        else
        {
            @foreach (var post in Model.Posts)
            {
                <article class="post-card">
                    <a asp-controller="Post" asp-action="Detail" asp-route-slug="@post.Slug">
                        <img src="@post.ThumbnailUrl" alt="@(isRtl ? post.TitleAr : post.TitleEn)" 
                             onerror="this.src='/images/default-post.jpg'"/>
                    </a>
                    <div class="content">
                        <h3>
                            <a asp-controller="Post" asp-action="Detail" asp-route-slug="@post.Slug" class="text-decoration-none text-dark">
                                @(isRtl ? post.TitleAr : post.TitleEn)
                            </a>
                        </h3>
                        <p>@(isRtl ? post.ShortDescriptionAr : post.ShortDescriptionEn)</p>
                        <div class="post-meta">
                            <span>
                                <i class="fas fa-folder me-1"></i>
                                @(isRtl ? post.CategoryNameAr : post.CategoryNameEn)
                            </span>
                            <span>
                                <i class="fas fa-calendar me-1"></i>
                                @post.CreatedDate.ToString("d")
                            </span>
                            <span>
                                <i class="fas fa-eye me-1"></i>
                                @post.ViewCount
                            </span>
                        </div>
                    </div>
                </article>
            }
        }
    </div>
</div>
